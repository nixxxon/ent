// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/nixxxon/entdemo/ent/schema"
	"github.com/nixxxon/entdemo/ent/todo"
	"github.com/nixxxon/entdemo/ent/todohistory"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescName is the schema descriptor for name field.
	todoDescName := todoFields[2].Descriptor()
	// todo.NameValidator is a validator for the "name" field. It is called by the builders before save.
	todo.NameValidator = todoDescName.Validators[0].(func(string) error)
	// todoDescID is the schema descriptor for id field.
	todoDescID := todoFields[0].Descriptor()
	// todo.DefaultID holds the default value on creation for the id field.
	todo.DefaultID = todoDescID.Default.(func() uuid.UUID)
	todohistoryFields := schema.TodoHistory{}.Fields()
	_ = todohistoryFields
	// todohistoryDescHistoryTime is the schema descriptor for history_time field.
	todohistoryDescHistoryTime := todohistoryFields[0].Descriptor()
	// todohistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	todohistory.DefaultHistoryTime = todohistoryDescHistoryTime.Default.(func() time.Time)
	// todohistoryDescName is the schema descriptor for name field.
	todohistoryDescName := todohistoryFields[5].Descriptor()
	// todohistory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	todohistory.NameValidator = todohistoryDescName.Validators[0].(func(string) error)
	// todohistoryDescID is the schema descriptor for id field.
	todohistoryDescID := todohistoryFields[3].Descriptor()
	// todohistory.DefaultID holds the default value on creation for the id field.
	todohistory.DefaultID = todohistoryDescID.Default.(func() uuid.UUID)
}
